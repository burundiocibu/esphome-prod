# Vbat on the back of the board is connected to an 18650 LiIon cell
# Vbuss is connected to a 5VDC solar cell
# D0/A0/GPIO2 is connected to Vbat+ via a 100k/100k divider 

# Deep sleep current, around 60uA with the level sensor connected
# Awake current 30-80mA

substitutions:
  me: "pool-level"

esphome:
  name: ${me}
  comment: seeed esp32c3
  area: Pool
  on_boot:
    - priority: 0
      then:
        - deep_sleep.prevent: sleeper

esp32:
  board: seeed_xiao_esp32c3
  framework:
    type: esp-idf

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: false
  reboot_timeout: 60s
  id: wifi_id
  power_save_mode: HIGH
  manual_ip: 
    static_ip: 192.168.2.26
    gateway: 192.168.2.1
    subnet: 255.255.255.0
    dns1: 192.168.2.1

web_server:
  version: 2

logger:
  level: DEBUG
  logs:
    sensor: ERROR
    dallas.temp.sensor: ERROR

ota:
  - platform: esphome
    password: !secret esp_ota_pw
    id: my_ota

deep_sleep:
  id: sleeper
  sleep_duration: 300s # Dummy value, should never be used
  run_duration: 60s # Ditto. just for when there is no cmd/set msg to be had.

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  id: mqtt_client
  discovery: true
  # Set these empty so the device is not marked missing by home assistant
  will_message:
  birth_message:
  on_json_message: 
    topic: ${me}/cmd/sleep
    then:
      - lambda: |-
          unsigned duration = 60;
          if (x.containsKey("duration"))
            duration = long(x["duration"]);
          if (duration > 0)
          {
            unsigned sd = duration*1000 - millis();
            sd = min(duration*1000, sd);
            ESP_LOGI("sleeping", "millis:%d, duration:%d", millis(), sd);
            id(sleeper).set_sleep_duration(sd);
            id(sleeper).begin_sleep(true);
          }

text_sensor:
  - platform: version
    name: ${me} ESPHome Version

switch:
  - platform: restart
    name: ${me} restart

i2c:
  sda: GPIO6
  scl: GPIO7

one_wire:
  - platform: gpio
    pin: GPIO10

sensor:
  - platform: wifi_signal
    name: ${me} wifi signal
    id: snr
    update_interval: 120s

  - platform: internal_temperature
    name: ${me} internal temperature
    id: temp
    update_interval: 12s
    filters:
      - filter_out: NAN
      - sliding_window_moving_average:
          window_size: 10
          send_every: 10
          send_first_at: 10

  - platform: adc
    # aka D0, Has a 100k/100k resistive divider to Vbat
    # Also note that the battery voltage drops about .15 V when under the 80mA load
    pin: GPIO2
    name: ${me} vbat
    id: vbat
    attenuation: 12db # full scale is 4.2V
    accuracy_decimals: 2
    update_interval: 12s
    filters:
      - multiply: 2
      - sliding_window_moving_average:
          window_size: 10
          send_every: 10
          send_first_at: 10
      - filter_out: NAN

  - platform: adc
    # aka D0, Has a 100k/100k resistive divider to Vbat
    # Also note that the battery voltage drops about .15 V when under the 80mA load
    pin: GPIO3
    name: ${me} vpres
    id: vpres
    attenuation: 12db # full scale is 4.2V
    accuracy_decimals: 3
    update_interval: 12s
    filters:
      - multiply: 2
      - sliding_window_moving_average:
          window_size: 10
          send_every: 10
          send_first_at: 10
      - filter_out: NAN

  - platform: dallas_temp
    address: 0xd63c01d075a4ef28
    name: ${me} water temperature
    accuracy_decimals: 2
    update_interval: 120s
    unit_of_measurement: Â°C
    filters:
      - filter_out: NAN
