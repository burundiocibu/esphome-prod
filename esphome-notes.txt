
To generate an api key:

openssl rand -base64 32

It appears that the olimex/ble gateways can't do prometheus with the idf

from the containers dir:

dev=back-tap-tapes; docker run -it -v ~/containers/esp
home-prod:/config ghcr.io/esphome/esphome run --device $dev.groot-iot $dev.yaml^


---------
1/6:2024:

# To flash use esphome cli:
# pip install wxesphomeflasher
# esphomeflasher -p /dev/cu.usbserial-32230 --upload-baud-rate 115200 Downloads/noob8266.bin
#  press and hold boot, presss and release EN (reset), release boot
#  while esphomeflasher is trying to connect to device

---------
1/7/2024:

Started moving all devices to report only in SI units
and all units to use a shared secret ota pw and api

To update an existing ota password

esphome:
  on_boot:
    - lambda: |-
        id(my_ota).set_auth_password("9f47a47302bb0eb644fa82fe1d75c67a");
ota:
  password: "Old password"
  id: my_ota

then change it to have:

api:
  encryption:
    key: !secret esp_api_key

ota:
  password: !secret esp_ota_pw
  id: my_ota


----------
1/11/2024:

To get the container to compile when run as a user, make sure the container defines:

    environment:
      HOME: /config
      PLATFORMIO_CORE_DIR: /config/.esphome/.platformio
      PLATFORMIO_GLOBALLIB_DIR: /config/.esphome/.plattformioLibs

Then upload from the command line with:

docker-compose exec esphome-prod esphome compile foo/dev.yaml