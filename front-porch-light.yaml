substitutions:
  me: front-porch-light

esphome:
  name: ${me}
  comment: Shelly 1PM

esp8266:
  board: esp01_1m

logger:
  level: info

api:
  encryption:
    key: !secret esp_api_key

ota:
  password: !secret esp_ota_pw
  id: my_ota

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

web_server:
  port: 80

text_sensor:
  - platform: version
    name: ${me} ESPHome Version

switch:
  - platform: restart
    name: ${me} restart

output:
  - platform: gpio
    id: relay
    pin: GPIO15

light:
  - platform: binary
    name: Front Porch Light
    output: relay
    on_turn_on:
      - output.turn_on: relay
    on_turn_off:
      - output.turn_off: relay

sensor:
  - platform: uptime
    name: ${me} uptime
    update_interval: 120s
    
  - platform: wifi_signal
    name: ${me} wifi signal
    update_interval: 120s

  - platform: hlw8012
    cf_pin: GPIO05
    cf1_pin: GPIO13 # not used because it is not available on the 1PM but it is needed to compile
    sel_pin: GPIO14 # ditto
    power:
      name: ${me} power
      unit_of_measurement: W
      id: power
      device_class: power
      state_class: measurement
      accuracy_decimals: 1
      filters:
      # Map from sensor -> measured value
      - calibrate_linear:
          - 0.0 -> 1.0
          - 110.33186 -> 20.62
          - 131.01909 -> 24.32
          - 341.33920 -> 62.08
          - 5561.41553 -> 1000.0
          - 2975.51221 -> 535.7
          - 9612.66309 -> 1720.0
          - 14891.35352 -> 2679.0
      # Make everything below 2W appear as just 0W.
      - lambda: if (x < 2) return 0; else return x;
    update_interval: 15s

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO4
    filters:
      - delayed_on_off: 50ms # small delay to prevent debouncing
    name: ${me} toggle
    on_press:
      then:
        - output.turn_on: relay
    on_release:
      then:
        - output.turn_off: relay
  