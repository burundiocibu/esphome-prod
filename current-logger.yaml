# https://learn.adafruit.com/esp32-s3-reverse-tft-feather/pinouts


substitutions:
  me: current-logger

esphome:
  name: ${me}
  comment: adafruit esp32-s3-reverse-tft-feather
  on_boot: 
    then:
      - output.turn_on: tfti2c_pwr

esp32:
  board: adafruit_feather_esp32s3_tft
  framework:
    type: arduino
    
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

logger:
  level: info

api:
  encryption:
    key: !secret esp_api_key

ota:
  - platform: esphome
    password: !secret esp_ota_pw

prometheus:

web_server:
  version: 3

time:
  - platform: homeassistant
    timezone: America/Chicago

text_sensor:
  - platform: version
    name: ${me} ESPHome Version

switch:
  - platform: restart
    name: ${me} restart

i2c:
  sda: GPIO3
  scl: GPIO4

spi:
  clk_pin: GPIO36
  mosi_pin: GPIO35
  miso_pin: GPIO37

output:
  - platform: gpio
    pin: GPIO7
    id: tfti2c_pwr
  
  - platform: gpio
    pin: GPIO13
    id: led


sensor:
  - platform: uptime
    name: ${me} uptime
    update_interval: 120s

  - platform: wifi_signal
    name: ${me} wifi signal
    update_interval: 5s

  - platform: ina2xx_i2c
    address: 0x40
    model: INA228
    shunt_resistance: 0.015 ohm
    max_current: 10A
    update_interval: 100ms
    current:
      name: ${me} current
      id: ina_current
      accuracy_decimals: 3
      unit_of_measurement: mA
      filters:
        - multiply: 1000
    power:
      name: ${me} power
      id: ina_power
      filters:
        - throttle: 1s
    bus_voltage:
      name: ${me} bus voltage
      accuracy_decimals: 4
      filters:
        - throttle: 1s
    shunt_voltage:
      name: ${me} shunt voltage
      accuracy_decimals: 6
      filters:
        - throttle: 1s
    energy: 
      name: ${me} energy
      accuracy_decimals: 6
      filters:
        - throttle: 1s
    charge:
      name: ${me} charge
      id: charge
      accuracy_decimals: 8
      filters:
        - throttle:  1s
    temperature: 
      name: ${me} ina temperature
      accuracy_decimals: 2
      filters:
        - throttle: 1s

  - platform: template
    name: ${me} avg current
    id: avg_current
    lambda: "return id(ina_current).raw_state;"
    update_interval: 100ms
    accuracy_decimals: 5
    unit_of_measurement: mA
    filters:
      - multiply: 1000
      - sliding_window_moving_average:
          window_size: 100
          send_every: 10

  - platform: template
    name: ${me} max current
    id: max_current
    lambda: "return id(ina_current).raw_state;"
    update_interval: 100ms
    accuracy_decimals: 3
    unit_of_measurement: mA
    filters:
      - multiply: 1000
      - max:
         window_size: 100
         send_every: 10

  - platform: template
    name: ${me} min current
    id: min_current
    lambda: "return id(ina_current).raw_state;"
    update_interval: 100ms
    accuracy_decimals: 3
    unit_of_measurement: mA
    filters:
      - multiply: 1000
      - min:
         window_size: 100
         send_every: 10

  - platform: max17043
    address: 0x36
    battery_voltage:
      name: ${me} battery boltage
    battery_level:
      name: ${me} battery

color:
  - id: red
    red: 100%
    green: 0%
    blue: 0%
  - id: green
    red: 0%
    green: 100%
    blue: 0%
  - id: blue
    red: 0%
    green: 0%
    blue: 100%
  - id: yellow
    red: 100%
    green: 100%
    blue: 0%
  - id: white
    red: 100%
    green: 100%
    blue: 100%

font:
  - file: "gfonts://Roboto"
    id: roboto_14
    size: 14
    bpp: 4

  - file: "gfonts://Roboto"
    id: roboto_18
    size: 18
    bpp: 4

graph:
  - id: current_graph
    duration: 1min
    width: 239
    height: 120
    border: true
    min_value: 0
    max_value: 50
    y_grid: 100
    traces:
      - sensor: ina_current
        line_type: SOLID
        color: white
      - sensor: avg_current
        line_type: SOLID
        continuous: true
        color: blue

display:
  - platform: st7789v
    model: TTGO_TDISPLAY_135X240
    backlight_pin: GPIO45
    dc_pin: GPIO40
    reset_pin: GPIO41
    cs_pin: GPIO42
    rotation: 270
    update_interval: 250ms
    lambda: |-
      it.graph(1, 0, id(current_graph));
      it.printf(1, 120, id(roboto_14), id(white), "%6.2f, (%6.2f - %6.2f) mA",
          id(avg_current).state, id(min_current).state, id(max_current).state);
