# hardware wemos d1-mini with a pair of bme680s on I2C
# SCL on D1(gpio5) brown wire, SDA on D2(gpio4) orange wire
substitutions:
  me: downstairs-ac

esphome:
  name: ${me}
  comment: wemos d1 mini

esp8266:
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

logger:
  level: info

api:
  encryption:
    key: !secret esp_api_key

ota:
  password: !secret esp_ota_pw
  id: my_ota

prometheus:

web_server:

time:
  - platform: homeassistant
    timezone: America/Chicago

text_sensor:
  - platform: version
    name: ${me} ESPHome Version

switch:
  - platform: restart
    name: ${me} restart

sensor:
  - platform: uptime
    name: ${me} uptime
    update_interval: 120s

  - platform: wifi_signal
    name: ${me} wifi signal
    update_interval: 120s

  - platform: bme680
    address: 0x77
    update_interval: 5s
    temperature:
      name: ${me} return temperature
      id: t2
      accuracy_decimals: 2
      filters:
        - median
    pressure:
      name: ${me} return pressure
      id: p2
      accuracy_decimals: 4
      filters:
        - median
    humidity:
      name: ${me} return humidity
      id: h2
      accuracy_decimals: 1
      filters:
        - median
    gas_resistance:
      name: ${me} return gas resistance
      id: g2
      accuracy_decimals: 1
      filters:
        - median

  - platform: bme680
    address: 0x76
    update_interval: 5s
    temperature:
      name: ${me} evaporator temperature
      id: t1
      accuracy_decimals: 2
      filters:
        - median
    pressure:
      name: ${me} evaporator pressure
      id: p1
      accuracy_decimals: 4
      filters:
        - median
    humidity:
      name: ${me} evaporator humidity
      id: h1
      accuracy_decimals: 1
      filters:
        - median
    gas_resistance:
      name: ${me} evaporator gas resistance
      id: g1
      filters:
        - median

  - platform: template
    name: ${me} Tr-Te
    lambda: return id(t2).state - id(t1).state;
    accuracy_decimals: 2
    unit_of_measurement: °C

  - platform: template
    name: ${me} Pr-Pe
    lambda: return id(p2).state - id(p1).state;
    unit_of_measurement: hPa
    accuracy_decimals: 2

  - platform: template
    name: ${me} evaporator dewpoint
    unit_of_measurement: °C
    lambda: return (243.5*(log(id(h1).state/100)+((17.67*id(t1).state)/(243.5+id(t1).state)))/(17.67-log(id(h1).state/100)-((17.67*id(t1).state)/(243.5+id(t1).state))));
    id: td1
    accuracy_decimals: 1

  - platform: template
    name: ${me} return dewpoint
    lambda: return (243.5*(log(id(h2).state/100)+((17.67*id(t2).state)/(243.5+id(t2).state)))/(17.67-log(id(h2).state/100)-((17.67*id(t2).state)/(243.5+id(t2).state))));
    id: td2
    accuracy_decimals: 1
    unit_of_measurement: °C

  - platform: template
    name: ${me} TDr-TDe
    lambda: return id(td2).state - id(td1).state;
    unit_of_measurement: hPa
    accuracy_decimals: 2

  - platform: template
    name: ${me} evaporator absolute humidity
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(t1).state) /
        (id(t1).state + 243.5)) * id(p1).state * mw) /
        ((273.15 + id(t1).state) * r); // in grams/m^3
    accuracy_decimals: 2
    update_interval: 15s
    icon: 'mdi:water'
    unit_of_measurement: 'g/m³'

  - platform: template
    name: ${me} return absolute humidity
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(t2).state) /
        (id(t2).state + 243.5)) * id(p2).state * mw) /
        ((273.15 + id(t2).state) * r); // in grams/m^3
    accuracy_decimals: 2
    update_interval: 15s
    icon: 'mdi:water'
    unit_of_measurement: 'g/m³'

i2c:
  sda: D2
  scl: D1
