# Hardware is a Shelly 1PM
# https://www.esphome-devices.com/devices/Shelly-1PM
substitutions:
  name: garage-tapes

esphome:
  name: ${name}
  platform: ESP8266
  board: esp01_1m
  comment: "Shelly 1PM"

wifi:
  ssid: !secret ssid2
  password: !secret password2
  power_save_mode: HIGH # for ESP8266 LOW/HIGH are mixed up, esphome/issues/issues/1532

# Enable logging
logger:

# Enable various APIs
api:

ota:

prometheus:

web_server:
  port: 80

time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: America/Chicago


text_sensor:
  - platform: version
    name: "ESPHome Version"


switch:
  - platform: restart
    name: ${name} restart

  - platform: gpio
    name: ${name} relay
    id: relay
    pin: GPIO15


status_led:
  pin:
    number: GPIO0
    inverted: yes


sensor:
  - platform: uptime
    name: ${name} uptime
    update_interval: 120s

  - platform: wifi_signal
    name: ${name} wifi signal
    update_interval: 120s

  - platform: hlw8012
    cf_pin: GPIO05
    cf1_pin: GPIO13 # not used because it is not available on the 1PM but it is needed to compile
    sel_pin: GPIO14 # ditto
    power:
      name: "${name} power"
      unit_of_measurement: W
      id: "power"
      device_class: power
      state_class: measurement
      accuracy_decimals: 1
      filters:
      # Map from sensor -> measured value
      - calibrate_linear:
          - 0.0 -> 1.0
          - 110.33186 -> 20.62
          - 131.01909 -> 24.32
          - 341.33920 -> 62.08
          - 5561.41553 -> 1000.0
          - 2975.51221 -> 535.7
          - 9612.66309 -> 1720.0
          - 14891.35352 -> 2679.0
      # Make everything below 2W appear as just 0W.
      - lambda: if (x < 2) return 0; else return x;
    update_interval: 15s

  - platform: total_daily_energy
    name: "${name} daily energy"
    power_id: power
    device_class: energy
    state_class: measurement
    unit_of_measurement: Wh

  - platform: ntc
    sensor: temp_resistance_reading
    name: "${name} temperature"
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    device_class: temperature
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      - above: 60 # °C
        then:
          - homeassistant.event:
              event: esphome.overheat
              data:
                title: "${name} has overheated."
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: A0


binary_sensor:
  - platform: gpio
    pin:
      number: GPIO4
    filters:
      - delayed_on_off: 50ms # small delay to prevent debouncing
    name: "${name} switch"
    on_press:
      then:
        - switch.toggle: relay
  #  internal: true
